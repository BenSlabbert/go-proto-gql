syntax = "proto3";
package account;

import "github.com/danielvladco/go-proto-gql/gql.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

service Service {
    rpc SignIn (SignInReq) returns (SignInRes);
    rpc GetCurrentAccount (GetCurrentAccountReq) returns (GetCurrentAccountRes);
    rpc SignUpWithEmail (SignUpWithEmailReq) returns (SignUpWithEmailRes);
    rpc ResendConfirmationEmail (ResendConfirmationEmailReq) returns (ResendConfirmationEmailRes);
    rpc ConfirmEmail (ConfirmEmailReq) returns (ConfirmEmailRes);
    rpc ForgotPassword (ForgotPasswordReq) returns (ForgotPasswordRes);
    rpc CheckResetPasswordToken (CheckResetPasswordTokenReq) returns (CheckResetPasswordTokenRes);
    rpc ResetPassword (ResetPasswordReq) returns (ResetPasswordRes);
    rpc ChangePassword (ChangePasswordReq) returns (ChangePasswordRes);
    rpc RequestChangeEmail (RequestChangeEmailReq) returns (RequestChangeEmailRes);
    rpc ChangeEmail (ChangeEmailReq) returns (ChangeEmailRes);
    rpc RequestDeleteAccount (RequestDeleteAccountReq) returns (RequestDeleteAccountRes) {
        option (gql.type) = SUBSCRIPTION;
    };
    rpc DeleteAccount (DeleteAccountReq) returns (DeleteAccountRes) {
        option (gql.type) = QUERY;
    }
}

message SignInReq {
    string email = 1 [(validator.field) = {string_not_empty: true regex: "^[a-zA-Z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,4}$"}];
    string password = 2 [(validator.field) = {string_not_empty: true length_gt: 5 length_lt: 100}];
}

message GetCurrentAccountReq {
    
}
message SignUpWithEmailReq {
    string email = 1 [(validator.field) = {string_not_empty: true regex: "^[a-zA-Z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,4}$"}];
    string password = 4 [(validator.field) = {string_not_empty: true length_gt: 5 length_lt: 100}];
}
message ResendConfirmationEmailReq {
    enum Data {
        DDD = 0;
        NNN = 1;
        GGG = 2;
    }
    message Inner {
        enum InnerEnum {
            SSS = 0;
            DDD = 1;
        }
    }
    Inner.InnerEnum inner = 4;
    Data data = 2;
    string account_id = 1 [(validator.field) = {string_not_empty: true}];
}
message SignOutReq {
    
}
message ConfirmEmailReq {
    string token = 1 [(validator.field) = {string_not_empty: true}];
}
message ForgotPasswordReq {
    string email = 1 [(validator.field) = {string_not_empty: true regex: "^[a-zA-Z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,4}$"}];
}
message CheckResetPasswordTokenReq {
    string token = 1 [(validator.field) = {string_not_empty: true}];
}
message RequestChangeEmailReq {
    string new_email = 1 [(validator.field) = {string_not_empty: true regex: "^[a-zA-Z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,4}$"}];
}
message ChangeEmailReq {
    string token = 1 [(validator.field) = {string_not_empty: true}];
}
message ResetPasswordReq {
    string token = 1 [(validator.field) = {string_not_empty: true}];
    repeated string password = 2 [(validator.field) = {string_not_empty: true length_gt: 5 length_lt: 100}];
}
message ChangePasswordReq {
    string old_password = 1 [(validator.field) = {string_not_empty: true length_gt: 5 length_lt: 100}];
    string new_password = 2 [(validator.field) = {string_not_empty: true length_gt: 5 length_lt: 100}];
}
message RequestDeleteAccountReq {
    
}
message DeleteAccountReq {
    string token = 1;
}
// response
message SignInRes {
    Account account = 1;
}
message SignUpWithEmailRes {
    Account account = 1;
}
message ConfirmEmailRes {
    
}
message GetCurrentAccountRes {
    repeated Account account = 1;
}
message CheckResetPasswordTokenRes {
    
}
message SignOutRes {
    
}
message ResendConfirmationEmailRes {
    
}
message ForgotPasswordRes {
    
}
message ResetPasswordRes {
    
}
message ChangePasswordRes {
    
}
message RequestChangeEmailRes {
    
}
message ChangeEmailRes {
    Account account = 1;
}
message RequestDeleteAccountRes {
    
}
message DeleteAccountRes {
    
}

//common
message Account {
    string account_id = 1;
    string email = 2;
    bool email_confirmed = 3;
}

// events
message SignedUpWithEmail {
    string email = 1;
    bytes password = 4;
}
message EmailConfirmed {
    
}
message PasswordReset {
    bytes password = 1;
}
message PasswordChanged {
    bytes password = 1;
}
message EmailChanged {
    string email = 1;
}
message AccountDeleted {
    
}